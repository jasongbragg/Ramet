#' Generate a list of ramets to prune, either randomly, 
#' or based on missingness
#'
#' @param rs - a ramets set, as generated by collect_ramet_sets [Required]
#' @param method - either "random" or "least_missing"
#' @param gt - genotype matrix, with missing data as NA
#' @return a list consisting of two matrices 
#' @author Jason Bragg (jasongbragg@gmail.com)
#' @export

ramets_to_prune <- function(rs, method="random", gt=NULL) {

   vs <- unique(rs)
   samples_to_prune <- NULL

   for (i in 1:length(vs)) {

      inames <- names(rs)[ which(rs == vs[i]) ]
      if (length(inames > 1)) {
         if (method=="random") {
            samples_to_prune <- c(samples_to_prune, sample(inames)[-1] )
         }
         if (method=="least_missing") {
            i_least_missing  <- names(which.min(rowSums(is.na(dsnp[inames,]))))
            samples_to_prune <- c(samples_to_prune, inames[ which(inames != i_least_missing) ] )
            cat(i_least_missing,"\n")
         }
      } 
   }

   return(samples_to_prune)
}
